{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/neha/lms-app/lib/vapi.sdk.ts"],"sourcesContent":["import Vapi from \"@vapi-ai/web\";\n\nexport const vapi = new Vapi(process.env.NEXT_PUBLIC_VAPI_WEB_TOKEN!);\n"],"names":[],"mappings":";;;AAE6B;AAF7B;;AAEO,MAAM,OAAO,IAAI,sJAAA,CAAA,UAAI","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/neha/lms-app/lib/actions/companion.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { auth } from \"@clerk/nextjs/server\";\nimport { createSupabaseClient } from \"@/lib/supabase\";\nimport { revalidatePath } from \"next/cache\";\n\nexport const createCompanion = async (formData: CreateCompanion) => {\n  const { userId: author } = await auth();\n  const supabase = createSupabaseClient();\n\n  const { data, error } = await supabase\n    .from(\"companions\")\n    .insert({ ...formData, author })\n    .select();\n\n  if (error || !data)\n    throw new Error(error?.message || \"Failed to create a companion\");\n\n  return data[0];\n};\n\nexport const getAllCompanions = async ({\n  limit = 10,\n  page = 1,\n  subject,\n  topic,\n}: GetAllCompanions) => {\n  const supabase = createSupabaseClient();\n\n  let query = supabase.from(\"companions\").select();\n\n  if (subject && topic) {\n    query = query\n      .ilike(\"subject\", `%${subject}%`)\n      .or(`topic.ilike.%${topic}%,name.ilike.%${topic}%`);\n  } else if (subject) {\n    query = query.ilike(\"subject\", `%${subject}%`);\n  } else if (topic) {\n    query = query.or(`topic.ilike.%${topic}%,name.ilike.%${topic}%`);\n  }\n\n  query = query.range((page - 1) * limit, page * limit - 1);\n\n  const { data: companions, error } = await query;\n\n  if (error) throw new Error(error.message);\n\n  return companions;\n};\n\nexport const getCompanion = async (id: string) => {\n  const supabase = createSupabaseClient();\n\n  const { data, error } = await supabase\n    .from(\"companions\")\n    .select()\n    .eq(\"id\", id);\n\n  if (error) return console.log(error);\n\n  return data[0];\n};\n\nexport const addToSessionHistory = async (companionId: string) => {\n  const { userId } = await auth();\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase.from(\"session_history\").insert({\n    companion_id: companionId,\n    user_id: userId,\n  });\n\n  if (error) throw new Error(error.message);\n\n  return data;\n};\n\nexport const getRecentSessions = async (limit = 10) => {\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"session_history\")\n    .select(`companions:companion_id (*)`)\n    .order(\"created_at\", { ascending: false })\n    .limit(limit);\n\n  if (error) throw new Error(error.message);\n\n  return data.map(({ companions }) => companions);\n};\n\nexport const getUserSessions = async (userId: string, limit = 10) => {\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"session_history\")\n    .select(`companions:companion_id (*)`)\n    .eq(\"user_id\", userId)\n    .order(\"created_at\", { ascending: false })\n    .limit(limit);\n\n  if (error) throw new Error(error.message);\n\n  return data.map(({ companions }) => companions);\n};\n\nexport const getUserCompanions = async (userId: string) => {\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"companions\")\n    .select()\n    .eq(\"author\", userId);\n\n  if (error) throw new Error(error.message);\n\n  return data;\n};\n\nexport const newCompanionPermissions = async () => {\n  const { userId, has } = await auth();\n  const supabase = createSupabaseClient();\n\n  let limit = 0;\n\n  if (has({ plan: \"pro\" })) {\n    return true;\n  } else if (has({ feature: \"3_companion_limit\" })) {\n    limit = 3;\n  } else if (has({ feature: \"10_companion_limit\" })) {\n    limit = 10;\n  }\n\n  const { data, error } = await supabase\n    .from(\"companions\")\n    .select(\"id\", { count: \"exact\" })\n    .eq(\"author\", userId);\n\n  if (error) throw new Error(error.message);\n\n  const companionCount = data?.length;\n\n  if (companionCount >= limit) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\n// Bookmarks\nexport const addBookmark = async (companionId: string, path: string) => {\n  const { userId } = await auth();\n  if (!userId) return;\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase.from(\"bookmarks\").insert({\n    companion_id: companionId,\n    user_id: userId,\n  });\n  if (error) {\n    throw new Error(error.message);\n  }\n  // Revalidate the path to force a re-render of the page\n\n  revalidatePath(path);\n  return data;\n};\n\nexport const removeBookmark = async (companionId: string, path: string) => {\n  const { userId } = await auth();\n  if (!userId) return;\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"bookmarks\")\n    .delete()\n    .eq(\"companion_id\", companionId)\n    .eq(\"user_id\", userId);\n  if (error) {\n    throw new Error(error.message);\n  }\n  revalidatePath(path);\n  return data;\n};\n\n// It's almost the same as getUserCompanions, but it's for the bookmarked companions\nexport const getBookmarkedCompanions = async (userId: string) => {\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"bookmarks\")\n    .select(`companions:companion_id (*)`) // Notice the (*) to get all the companion data\n    .eq(\"user_id\", userId);\n  if (error) {\n    throw new Error(error.message);\n  }\n  // We don't need the bookmarks data, so we return only the companions\n  return data.map(({ companions }) => companions);\n};\n\nexport const deleteCompanion = async (companionId: string, path: string) => {\n  const { userId } = await auth();\n  if (!userId) return;\n\n  const supabase = createSupabaseClient();\n\n  // First check if the user owns this companion\n  const { data: companion, error: checkError } = await supabase\n    .from(\"companions\")\n    .select(\"author\")\n    .eq(\"id\", companionId)\n    .single();\n\n  if (checkError || !companion) {\n    throw new Error(\"Companion not found\");\n  }\n\n  if (companion.author !== userId) {\n    throw new Error(\"Not authorized to delete this companion\");\n  }\n\n  // Delete the companion\n  const { error } = await supabase\n    .from(\"companions\")\n    .delete()\n    .eq(\"id\", companionId);\n\n  if (error) {\n    throw new Error(error.message);\n  }\n\n  revalidatePath(path);\n};\n"],"names":[],"mappings":";;;;;;IA+Da,sBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/neha/lms-app/components/CompanionComponent.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { cn, configureAssistant, getSubjectColor } from \"@/lib/utils\";\nimport { vapi } from \"@/lib/vapi.sdk\";\nimport Image from \"next/image\";\nimport Lottie, { LottieRefCurrentProps } from \"lottie-react\";\nimport soundwaves from \"@/constants/soundwaves.json\";\nimport { addToSessionHistory } from \"@/lib/actions/companion.actions\";\n\nenum CallStatus {\n  INACTIVE = \"INACTIVE\",\n  CONNECTING = \"CONNECTING\",\n  ACTIVE = \"ACTIVE\",\n  FINISHED = \"FINISHED\",\n}\n\nconst CompanionComponent = ({\n  companionId,\n  subject,\n  topic,\n  name,\n  userName,\n  userImage,\n  style,\n  voice,\n}: CompanionComponentProps) => {\n  const [callStatus, setCallStatus] = useState<CallStatus>(CallStatus.INACTIVE);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [messages, setMessages] = useState<SavedMessage[]>([]);\n\n  const lottieRef = useRef<LottieRefCurrentProps>(null);\n\n  useEffect(() => {\n    if (lottieRef) {\n      if (isSpeaking) {\n        lottieRef.current?.play();\n      } else {\n        lottieRef.current?.stop();\n      }\n    }\n  }, [isSpeaking, lottieRef]);\n\n  useEffect(() => {\n    const onCallStart = () => setCallStatus(CallStatus.ACTIVE);\n\n    const onCallEnd = () => {\n      setCallStatus(CallStatus.FINISHED);\n      addToSessionHistory(companionId);\n    };\n\n    const onMessage = (message: Message) => {\n      if (message.type === \"transcript\" && message.transcriptType === \"final\") {\n        const newMessage = { role: message.role, content: message.transcript };\n        setMessages((prev) => [newMessage, ...prev]);\n      }\n    };\n\n    const onSpeechStart = () => setIsSpeaking(true);\n    const onSpeechEnd = () => setIsSpeaking(false);\n\n    const onError = (error: Error) => console.log(\"Error\", error);\n\n    vapi.on(\"call-start\", onCallStart);\n    vapi.on(\"call-end\", onCallEnd);\n    vapi.on(\"message\", onMessage);\n    vapi.on(\"error\", onError);\n    vapi.on(\"speech-start\", onSpeechStart);\n    vapi.on(\"speech-end\", onSpeechEnd);\n\n    return () => {\n      vapi.off(\"call-start\", onCallStart);\n      vapi.off(\"call-end\", onCallEnd);\n      vapi.off(\"message\", onMessage);\n      vapi.off(\"error\", onError);\n      vapi.off(\"speech-start\", onSpeechStart);\n      vapi.off(\"speech-end\", onSpeechEnd);\n    };\n  }, []);\n\n  const toggleMicrophone = () => {\n    const isMuted = vapi.isMuted();\n    vapi.setMuted(!isMuted);\n    setIsMuted(!isMuted);\n  };\n\n  const handleCall = async () => {\n    setCallStatus(CallStatus.CONNECTING);\n\n    const assistantOverrides = {\n      variableValues: { subject, topic, style },\n      clientMessages: [\"transcript\"],\n      serverMessages: [],\n    };\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    vapi.start(configureAssistant(voice, style), assistantOverrides);\n  };\n\n  const handleDisconnect = () => {\n    setCallStatus(CallStatus.FINISHED);\n    vapi.stop();\n  };\n\n  return (\n    <section className=\"flex flex-col h-[70vh]\">\n      <section className=\"flex gap-8 max-sm:flex-col\">\n        <div className=\"companion-section\">\n          <div\n            className=\"companion-avatar\"\n            style={{ backgroundColor: getSubjectColor(subject) }}\n          >\n            <div\n              className={cn(\n                \"absolute transition-opacity duration-1000\",\n                callStatus === CallStatus.FINISHED ||\n                  callStatus === CallStatus.INACTIVE\n                  ? \"opacity-1001\"\n                  : \"opacity-0\",\n                callStatus === CallStatus.CONNECTING &&\n                  \"opacity-100 animate-pulse\"\n              )}\n            >\n              <Image\n                src={`/icons/${subject}.svg`}\n                alt={subject}\n                width={150}\n                height={150}\n                className=\"max-sm:w-fit\"\n              />\n            </div>\n\n            <div\n              className={cn(\n                \"absolute transition-opacity duration-1000\",\n                callStatus === CallStatus.ACTIVE ? \"opacity-100\" : \"opacity-0\"\n              )}\n            >\n              <Lottie\n                lottieRef={lottieRef}\n                animationData={soundwaves}\n                autoplay={false}\n                className=\"companion-lottie\"\n              />\n            </div>\n          </div>\n          <p className=\"font-bold text-2xl\">{name}</p>\n        </div>\n\n        <div className=\"user-section\">\n          <div className=\"user-avatar\">\n            <Image\n              src={userImage}\n              alt={userName}\n              width={130}\n              height={130}\n              className=\"rounded-lg\"\n            />\n            <p className=\"font-bold text-2xl\">{userName}</p>\n          </div>\n          <button\n            className=\"btn-mic\"\n            onClick={toggleMicrophone}\n            disabled={callStatus !== CallStatus.ACTIVE}\n          >\n            <Image\n              src={isMuted ? \"/icons/mic-off.svg\" : \"/icons/mic-on.svg\"}\n              alt=\"mic\"\n              width={36}\n              height={36}\n            />\n            <p className=\"max-sm:hidden\">\n              {isMuted ? \"Turn on microphone\" : \"Turn off microphone\"}\n            </p>\n          </button>\n          <button\n            className={cn(\n              \"rounded-lg py-2 cursor-pointer transition-colors w-full text-white\",\n              callStatus === CallStatus.ACTIVE ? \"bg-red-700\" : \"bg-primary\",\n              callStatus === CallStatus.CONNECTING && \"animate-pulse\"\n            )}\n            onClick={\n              callStatus === CallStatus.ACTIVE ? handleDisconnect : handleCall\n            }\n          >\n            {callStatus === CallStatus.ACTIVE\n              ? \"End Session\"\n              : callStatus === CallStatus.CONNECTING\n              ? \"Connecting\"\n              : \"Start Session\"}\n          </button>\n        </div>\n      </section>\n\n      <section className=\"transcript\">\n        <div className=\"transcript-message no-scrollbar\">\n          {messages.map((message, index) => {\n            if (message.role === \"assistant\") {\n              return (\n                <p key={index} className=\"max-sm:text-sm\">\n                  {name.split(\" \")[0].replace(\"/[.,]/g, \", \"\")}:{\" \"}\n                  {message.content}\n                </p>\n              );\n            } else {\n              return (\n                <p key={index} className=\"text-primary max-sm:text-sm\">\n                  {userName}: {message.content}\n                </p>\n              );\n            }\n          })}\n        </div>\n\n        <div className=\"transcript-fade\" />\n      </section>\n    </section>\n  );\n};\n\nexport default CompanionComponent;\n"],"names":[],"mappings":"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","debugId":null}}]
}
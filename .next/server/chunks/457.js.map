{"version":3,"file":"457.js","mappings":"g6BAGA,eACA,eAkBA,WACA,MAAe,QAAe,GAC9B,EAAc,QAAc,GAC5B,yBACA,EACA,SACA,0BACA,uBACA,KACA,aACA,iBAAU,GAAe,CAAE,OAAa,GACxC,IACA,IACA,EADA,MAEA,IACA,OAAiD,iBAAmB,MAAQ,CAC5E,CAAM,MACN,KAAwB,CACxB,CACA,oBACA,CAAI,MACJ,MACA,CACA,CACA,WACA,kBAAU,GAAgB,CAAE,OAAa,GACzC,KACA,EACA,EAEA,iFACA,CACA,gBACA,YACA,QACA,EAEA,EACA,OACA,WAAU,GAAS,CAAE,OAAa,GAClC,IACA,KAAyB,sBAA8B,CACvD,CAAI,MACJ,CACA,IACA,EACA,OACA,eAAU,GAAa,CAAE,OAAa,GACtC,cACA,EACA,mBACA,kBAAU,eAA2B,CAAE,OAAa,GACpD,OACA,YAEA,IACA,UACA,MACA,QAA4C,aAAiB,EA3E7D,WACA,eAAU,mDAA4D,QAAa,GACnF,EAAe,QAAe,GAC9B,EAAc,QAAc,GAC5B,0BACA,OACA,QAEA,aAEA,iBACA;;GAEG,aAAa;CAChB,CAEA,IA6DA,UACA,mEAEA,OADA,IACA,EAEA,MAAiB,OAA4B,GAAG,EAChD,gGAkBA,OAjBA,IACA,uBACA,gBACA,YACA,QACA,CAAK,EAKL,IAJA;AACA;AACA;AACA,IACA,CACA,gBACA,YACA,QACA,CAAK,GAEL,IACA,CACA,CACA,aACA,WAAU,GAAS,CAAE,OAAa,GAClC,SAGA,IACA,IACA,OAA6B,sBAA8B,CAC3D,CAAI,MACJ,CACA,IACA,uDCvHA,iCCmBA,MDlBA,UCEuC,SDDvC,KCiBuC,EDjBvC,sBAA2D,YAAa,sBACxE,ECAuC,CACvC,0CACA,eAAY,wEAA6E,EAAU,KAAS,CAW5G,WAXkG,CAW3E,GATvB,CACA,aACA,gBACA,eACA,iBACA,YACA,QACA,EAEuB,KAVN,EAAQ,KAAW,EAUb,IADvB,MATwB,MASxB,KACuB,CACvB,CACA,CAAC,IChBD,MACA,sBAA4B,GAAQ,wEACpC,EACA,OACA,EAAkB,IAClB,QADkB,EAGE,IAEpB,OACA,CAHoB,CAGF,MAClB,MADkB,IAGT,EAAW,MAEpB,MAFoB,CAGpB,EAAkB,KAClB,OADkB,EAGT,EAAW","sources":["webpack://jsm_saas_app/./node_modules/@clerk/nextjs/dist/esm/server/keyless-node.js","webpack://jsm_saas_app/./node_modules/@clerk/nextjs/dist/esm/chunk-BUSYA2B4.js","webpack://jsm_saas_app/./node_modules/@clerk/nextjs/dist/esm/runtime/node/safe-node-apis.js","webpack://jsm_saas_app/./node_modules/@clerk/nextjs/dist/esm/server/fs/utils.js"],"sourcesContent":["import \"../chunk-BUSYA2B4.js\";\nimport { createClerkClientWithOptions } from \"./createClerkClient\";\nimport { nodeCwdOrThrow, nodeFsOrThrow, nodePathOrThrow } from \"./fs/utils\";\nconst CLERK_HIDDEN = \".clerk\";\nconst CLERK_LOCK = \"clerk.lock\";\nfunction updateGitignore() {\n  const { existsSync, writeFileSync, readFileSync, appendFileSync } = nodeFsOrThrow();\n  const path = nodePathOrThrow();\n  const cwd = nodeCwdOrThrow();\n  const gitignorePath = path.join(cwd(), \".gitignore\");\n  if (!existsSync(gitignorePath)) {\n    writeFileSync(gitignorePath, \"\");\n  }\n  const gitignoreContent = readFileSync(gitignorePath, \"utf-8\");\n  const COMMENT = `# clerk configuration (can include secrets)`;\n  if (!gitignoreContent.includes(CLERK_HIDDEN + \"/\")) {\n    appendFileSync(gitignorePath, `\n${COMMENT}\n/${CLERK_HIDDEN}/\n`);\n  }\n}\nconst generatePath = (...slugs) => {\n  const path = nodePathOrThrow();\n  const cwd = nodeCwdOrThrow();\n  return path.join(cwd(), CLERK_HIDDEN, ...slugs);\n};\nconst _TEMP_DIR_NAME = \".tmp\";\nconst getKeylessConfigurationPath = () => generatePath(_TEMP_DIR_NAME, \"keyless.json\");\nconst getKeylessReadMePath = () => generatePath(_TEMP_DIR_NAME, \"README.md\");\nlet isCreatingFile = false;\nfunction safeParseClerkFile() {\n  const { readFileSync } = nodeFsOrThrow();\n  try {\n    const CONFIG_PATH = getKeylessConfigurationPath();\n    let fileAsString;\n    try {\n      fileAsString = readFileSync(CONFIG_PATH, { encoding: \"utf-8\" }) || \"{}\";\n    } catch {\n      fileAsString = \"{}\";\n    }\n    return JSON.parse(fileAsString);\n  } catch {\n    return void 0;\n  }\n}\nconst lockFileWriting = () => {\n  const { writeFileSync } = nodeFsOrThrow();\n  isCreatingFile = true;\n  writeFileSync(\n    CLERK_LOCK,\n    // In the rare case, the file persists give the developer enough context.\n    \"This file can be deleted. Please delete this file and refresh your application\",\n    {\n      encoding: \"utf8\",\n      mode: \"0777\",\n      flag: \"w\"\n    }\n  );\n};\nconst unlockFileWriting = () => {\n  const { rmSync } = nodeFsOrThrow();\n  try {\n    rmSync(CLERK_LOCK, { force: true, recursive: true });\n  } catch {\n  }\n  isCreatingFile = false;\n};\nconst isFileWritingLocked = () => {\n  const { existsSync } = nodeFsOrThrow();\n  return isCreatingFile || existsSync(CLERK_LOCK);\n};\nasync function createOrReadKeyless() {\n  const { writeFileSync, mkdirSync } = nodeFsOrThrow();\n  if (isFileWritingLocked()) {\n    return null;\n  }\n  lockFileWriting();\n  const CONFIG_PATH = getKeylessConfigurationPath();\n  const README_PATH = getKeylessReadMePath();\n  mkdirSync(generatePath(_TEMP_DIR_NAME), { recursive: true });\n  updateGitignore();\n  const envVarsMap = safeParseClerkFile();\n  if ((envVarsMap == null ? void 0 : envVarsMap.publishableKey) && (envVarsMap == null ? void 0 : envVarsMap.secretKey)) {\n    unlockFileWriting();\n    return envVarsMap;\n  }\n  const client = createClerkClientWithOptions({});\n  const accountlessApplication = await client.__experimental_accountlessApplications.createAccountlessApplication().catch(() => null);\n  if (accountlessApplication) {\n    writeFileSync(CONFIG_PATH, JSON.stringify(accountlessApplication), {\n      encoding: \"utf8\",\n      mode: \"0777\",\n      flag: \"w\"\n    });\n    const README_NOTIFICATION = `\n## DO NOT COMMIT\nThis directory is auto-generated from \\`@clerk/nextjs\\` because you are running in Keyless mode. Avoid committing the \\`.clerk/\\` directory as it includes the secret key of the unclaimed instance.\n  `;\n    writeFileSync(README_PATH, README_NOTIFICATION, {\n      encoding: \"utf8\",\n      mode: \"0777\",\n      flag: \"w\"\n    });\n  }\n  unlockFileWriting();\n  return accountlessApplication;\n}\nfunction removeKeyless() {\n  const { rmSync } = nodeFsOrThrow();\n  if (isFileWritingLocked()) {\n    return void 0;\n  }\n  lockFileWriting();\n  try {\n    rmSync(generatePath(), { force: true, recursive: true });\n  } catch {\n  }\n  unlockFileWriting();\n}\nexport {\n  createOrReadKeyless,\n  removeKeyless,\n  safeParseClerkFile\n};\n//# sourceMappingURL=keyless-node.js.map","var __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\n\nexport {\n  __commonJS\n};\n//# sourceMappingURL=chunk-BUSYA2B4.js.map","import {\n  __commonJS\n} from \"../../chunk-BUSYA2B4.js\";\nvar require_safe_node_apis = __commonJS({\n  \"src/runtime/node/safe-node-apis.js\"(exports, module) {\n    const { existsSync, writeFileSync, readFileSync, appendFileSync, mkdirSync, rmSync } = require(\"node:fs\");\n    const path = require(\"node:path\");\n    const fs = {\n      existsSync,\n      writeFileSync,\n      readFileSync,\n      appendFileSync,\n      mkdirSync,\n      rmSync\n    };\n    const cwd = () => process.cwd();\n    module.exports = { fs, path, cwd };\n  }\n});\nexport default require_safe_node_apis();\n//# sourceMappingURL=safe-node-apis.js.map","import \"../../chunk-BUSYA2B4.js\";\nimport nodeRuntime from \"#safe-node-apis\";\nconst throwMissingFsModule = (module) => {\n  throw new Error(`Clerk: ${module} is missing. This is an internal error. Please contact Clerk's support.`);\n};\nconst nodeFsOrThrow = () => {\n  if (!nodeRuntime.fs) {\n    throwMissingFsModule(\"fs\");\n  }\n  return nodeRuntime.fs;\n};\nconst nodePathOrThrow = () => {\n  if (!nodeRuntime.path) {\n    throwMissingFsModule(\"path\");\n  }\n  return nodeRuntime.path;\n};\nconst nodeCwdOrThrow = () => {\n  if (!nodeRuntime.cwd) {\n    throwMissingFsModule(\"cwd\");\n  }\n  return nodeRuntime.cwd;\n};\nexport {\n  nodeCwdOrThrow,\n  nodeFsOrThrow,\n  nodePathOrThrow\n};\n//# sourceMappingURL=utils.js.map"],"names":[],"sourceRoot":""}